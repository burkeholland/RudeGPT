@using RudeGPT.Shared
@using System.Text.Json

@inject IJSRuntime JSRuntime
@inject StateContainer StateContainer

<div class="mt-5">
  <p class="has-text-white has-text-centered">Chat History</p>
  @foreach (var chatHistoryItem in StateContainer.ChatHistory)
  {
    <div class="columns m-1">
      <div class="column has-cursor-pointer" @onclick="() => HandleHistoryItemClick(chatHistoryItem)">
        <a class="has-text-white">@chatHistoryItem.Title
        </a>
      </div>
      <div class="column is-narrow">
        <button class="delete" @onclick="() => HandleHistoryItemDelete(chatHistoryItem)"></button>
      </div>
    </div>
    @* <div class="mt-4">
  <div class="menu-list">

  </div>
  <span class="menu-item has-text-white is-size-6" @onclick="() => HandleHistoryItemClick(chatHistoryItem)"
  href="#">
  <div class="columns is-vcentered is-mobile">
  <div class="column">
  @chatHistoryItem.Title
  </div>
  <div class="column is-narrow">
  <button class="delete" @onclick="() => HandleHistoryItemDelete(chatHistoryItem)"></button>
  </div>
  </div>
  </span>
  </div> *@
  }
</div>
</div>

@code {
  protected override void OnInitialized()
  {
    StateContainer.OnChange += StateHasChanged;
  }

  protected override async Task OnInitializedAsync()
  {
    await StateContainer.LoadHistoryFromLocalStorage();
  }

  private void HandleHistoryItemClick(ChatSession chatHistoryItem)
  {
    StateContainer.ChatSession = chatHistoryItem;
  }

  private void HandleHistoryItemDelete(ChatSession chatHistoryItem)
  {
    StateContainer.ChatHistory.Remove(chatHistoryItem);
    StateContainer.SaveHistoryToLocalStorage();

    if (StateContainer.ChatSession == chatHistoryItem)
    {
      StateContainer.ChatSession = new ChatSession();
    }
  }

  public void Dispose()
  {
    StateContainer.OnChange -= StateHasChanged;
  }
}